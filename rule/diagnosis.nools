define UserCase {
    uid : null,
    emotion : null,
    body : null,
    behavior : null,
    habit : null,
}

define Diagnosis {
    uid : null,
    conclusion : null
}

define Advise {
    uid : null,
    advise : null
}

rule Healthy {
    when {
        p: UserCase {uid : n};
        not(d : Diagnosis d.uid == n);
    }
    then {
        var d = new Diagnosis({uid : n, conclusion : "健康"});
        emit("diagnosis", d);
        assert(d);
    }
}

rule Nothing {
    when {
        d : Diagnosis d.conclusion == '健康' {uid : n};
    }
    then {
        var t = new Advise({uid : n, advise : "暂无建议"});
        emit("treatment", t);
        assert(t);
    }
}

rule jjj {
        when {
          p: UserCase p.emotion.name in ["aaa"] && p.emotion.value >= 18 && p.body.name in ["bbb"] && p.body.value >= 52&& p.behavior.name in ["ccc"] && p.behavior.value >= 63] {uid: n};
        }
        then {
          var d = new Diagnosis({uid : n, conclusion : "jjj", reliability: 0.6});
          emit("diagnosis", d);
          assert(d);
        }
      }
      rule undefined {
        when {
            d : Diagnosis d.diagnosis in ["jjj"] {uid : n};
        }
        then {
            var t = new Advise({uid : n, advise : "请继续保持。"});
            emit("advise", t);
            assert(t);
        }
      }
